stages:
  - test
  - build
  - deploy

variables:
  BASE_IMAGE: "registry.kontur.host/ke-forms/test-analytics-gitlab-ci:v5"

Front Typecheck and lint:
  stage: test
  image:
    name: node:20
  tags:
    - forms-k8s
  script:
    - cd Front
    - npm install
    - npm run lint -- . --format json --output-file eslint-report.json
    - npm run typecheck
  artifacts:
    reports:
      codequality: Front/eslint-report.json
    expire_in: 1 week

Front tests:
  stage: test
  image:
    name: node:20
  tags:
    - forms-k8s
  script:
    - cd Front
    - npm install
    - npm test
  artifacts:
    paths:
      - Front/.test-reports/junit.xml
    reports:
      junit: Front/.test-reports/junit.xml

DotNet tests:
  stage: test
  image:
    name: mcr-proxy.kontur.host/dotnet/sdk:9.0
  tags:
    - forms-k8s
  services:
    - name: clickhouse/clickhouse-server
      alias: clickhouse
  variables:
    CLICKHOUSE_DB: default
    CLICKHOUSE_USER: testanalytics-user
    CLICKHOUSE_PASSWORD: 123123    
  script:
    - export TESTANALYTICS_CLICKHOUSE_HOST="clickhouse"
    - export TESTANALYTICS_CLICKHOUSE_PORT="8123"
    - export TESTANALYTICS_CLICKHOUSE_DB="$CLICKHOUSE_DB"
    - export TESTANALYTICS_CLICKHOUSE_USER="$CLICKHOUSE_USER"
    - export TESTANALYTICS_CLICKHOUSE_PASSWORD="$CLICKHOUSE_PASSWORD"
    - dotnet test --logger "junit;LogFilePath=../.test-reports/{assembly}.test-result.xml;FailureBodyFormat=Verbose"
  artifacts:
    paths:
      - .test-reports/**/*.xml
    reports:
      junit: .test-reports/**/*.xml

Build and publish docker images:
  stage: build
  image:
    name: gcr-proxy.kontur.host/kaniko-project/executor:debug
    entrypoint: [""]
  tags:
    - forms-k8s
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"registry.kontur.host\":{\"auth\":\"$(printf "%s:%s" "${DOCKER_REGISTRY_USER}" "${DOCKER_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --context "./"
      --dockerfile "./Dockerfile.TestCity.RedirectFromSingularToNewUrl"
      --destination "registry.kontur.host/ke-forms/test-analytics/redirect-from-singular:latest"
      --destination "registry.kontur.host/ke-forms/test-analytics/redirect-from-singular:$CI_COMMIT_SHORT_SHA"
      --cache-copy-layers
    - >-
      /kaniko/executor
      --context "./"
      --dockerfile "./Dockerfile.TestCity.GitLabJobsCrawler"
      --destination "registry.kontur.host/ke-forms/test-analytics/crawler:latest"
      --destination "registry.kontur.host/ke-forms/test-analytics/crawler:$CI_COMMIT_SHORT_SHA"
      --cache-copy-layers
    - >-
      /kaniko/executor
      --context "./"
      --dockerfile "./Dockerfile.TestCity.Api"
      --destination "registry.kontur.host/ke-forms/test-analytics/api:latest"
      --destination "registry.kontur.host/ke-forms/test-analytics/api:$CI_COMMIT_SHORT_SHA"
      --cache-copy-layers
    - >-
      /kaniko/executor
      --context "./"
      --dockerfile "./Dockerfile.Front"
      --destination "registry.kontur.host/ke-forms/test-analytics/front:latest"
      --destination "registry.kontur.host/ke-forms/test-analytics/front:$CI_COMMIT_SHORT_SHA"
      --cache-copy-layers

Deploy to k8s:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  tags:
    - forms-k8s
  script:
    - echo "$KUBECONFIG_FILE_CONTENT" | base64 -d > kubeconfig
    - export KUBECONFIG=$(pwd)/kubeconfig
    - export IMAGE_TAG=$CI_COMMIT_SHORT_SHA
    - export GITLAB_TOKEN="$GITLAB_TOKEN"
    - cd k8s
    - envsubst < deployment.yaml | kubectl apply -n test-analytics -f -
  needs: ["Build and publish docker images"]
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  resource_group: deploy_lock
  allow_failure: false
  when: on_success
  interruptible: true