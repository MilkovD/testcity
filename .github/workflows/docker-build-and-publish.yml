name: Build and Publish Docker Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        run: |
          echo "SHORT_SHA=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
      
      - name: Build and push TestCity.GitLabJobsCrawler
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.TestCity.GitLabJobsCrawler
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            tihonove/testcity-crawler:latest
            tihonove/testcity-crawler:0.1.0-test.${{ env.SHORT_SHA }}
          cache-from: type=registry,ref=tihonove/testcity-crawler:latest
          cache-to: type=inline
      
      - name: Build and push TestCity.Api
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.TestCity.Api
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            tihonove/testcity-api:latest
            tihonove/testcity-api:0.1.0-test.${{ env.SHORT_SHA }}
          cache-from: type=registry,ref=tihonove/testcity-api:latest
          cache-to: type=inline
      
      - name: Build and push Front
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.Front
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            tihonove/testcity-front:latest
            tihonove/testcity-front:${{ env.SHORT_SHA }}
          cache-from: type=registry,ref=tihonove/testcity-front:latest
          cache-to: type=inline
      
      - name: Build and push Worker
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.Worker
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            tihonove/testcity-worker:latest
            tihonove/testcity-worker:${{ env.SHORT_SHA }}
          cache-from: type=registry,ref=tihonove/testcity-worker:latest
          cache-to: type=inline
